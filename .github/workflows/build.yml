name: Build

on:
  pull_request:
  push:
    branches:
    - master
    - develop
    - release/**
    tags: '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
    - 'doc/**'
    - 'README.md'
    - 'CODE_OF_CONDUCT.md'
    - 'CONTRIBUTING.md'
    - 'LICENSE'
    - 'SECURITY.md'
    - 'data/**'
    - '.github/**'
    - '!.github/workflows/build.yml'

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Use Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Use Java 14
      uses: actions/setup-java@v1
      with:
        java-version: '14'
    - uses: actions/checkout@v1
    - name: Cache Gradle dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - name: Production Build
      run: ./gradlew -Pprod -Pwar clean bootWar
    - name: Make .war file accessible
      run: ln -s `ls build/libs/` ./build/libs/Artemis.war
    - name: Upload Artifact
      uses: actions/upload-artifact@master
      with:
        name: Artemis.war
        path: build/libs/Artemis.war

  server-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Use Java 14
      uses: actions/setup-java@v1
      with:
        java-version: '14'
    - uses: actions/checkout@v1
    - name: Cache Gradle dependencies
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Java Tests
      run: ./gradlew executeTests
    - name: Java Code Style
      run: ./gradlew spotlessCheck
      if: success() || failure()
    - name: Java Documentation
      run: ./gradlew checkstyleMain -x yarn_install -x webpack
      if: success() || failure()

  client-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Use Node.js 13
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - uses: actions/checkout@v1
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - name: Install Dependencies
      run: yarn install
    - name: TypeScript Tests
      run: yarn test
    - name: TypeScript Formatting
      run: yarn prettier:check
      if: success() || failure()
    - name: TypeScript Code Style
      run: yarn lint
      if: success() || failure()
