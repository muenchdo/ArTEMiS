configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

def profiles = 'dev'
if (project.hasProperty('no-liquibase')) {
    profiles += ',no-liquibase'
}
if (project.hasProperty('tls')) {
    profiles += ',tls'
}

springBoot {
    buildInfo {
        properties {
            time = null
        }
    }
}

bootRun {
    args = []
}

task webpack(type: YarnTask, dependsOn: 'yarn_install') {
    inputs.dir("src/main/webapp/")
    inputs.files("yarn.lock")
    inputs.files("build.gradle")

    def webpackDevFiles = fileTree("webpack//")
    webpackDevFiles.exclude("webpack.prod.js")
    inputs.files(webpackDevFiles)

    outputs.dir("build/resources/main/static/")

    args = ["run", "webpack:build"]
    environment = [APP_VERSION: project.version]
}

processResources {
    inputs.property('version', version)
    inputs.property('springProfiles', profiles)
    filesMatching("**/application.yml") {
        filter {
            it.replace("#project.version#", version)
        }
        filter {
            it.replace("#spring.profiles.active#", profiles)
        }
    }
}

bootJar.dependsOn processResources
